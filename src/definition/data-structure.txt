***ANSWER ALL QUESTIONS BELOW***

Why do we need data structure?
Answer: Data structures are designed to organize data in order to suit specific purposes so as to access and perform
operations in an appropriate manner.

What are the various operations that can be performed on different data structures?
Answer:
1. Traversing- It is used to access each data item exactly once so that it can be processed.

2. Searching-  It is used to find out the location of the data item if it exists in the given collection of data items.

3. Inserting- It is used to add a new data item in the given collection of data items.

4. Deleting-  It is used to delete an existing data item from the given collection of data items.

5. Sorting-   It is used to arrange the data items in some order. i.e. in ascending or descending order in case of
numerical data and in dictionary order in case of alphanumeric data.

6. Merging-  It is used to combine the data items of two sorted files into single file in the sorted form.

When would we use data structures in the real world?
Answer:
You need to store an image (1000 by 1000 pixels) as a bitmap. – ArrayList(java) or 2D array
To store the customer order information in a drive-in burger place. - Queues

What is an Array?
Answer: Used to store multiple values in a single variable, instead of declaring separate variables for each value.

What is the difference between Array and ArrayList?
Answer:
Array:
        * Array is not dynamic
        * Array has a fixed size
        * Array is (length)
        * Store only Primitives data types and objects
ArrayList:
        * Array List is dynamic
        * ArrayList does not have fixed size
        * ArrayList(Size)
        * ArrayList only objects

What is a LinkedList?
Answer: A LinkedList has the reference(address/pointer) to the next element of the LinkedList. Used where modifications
to a collection are frequent like addition/deletion operations.

How is an Array different from LinkedList?
Answer:
Linked list has elements that can be added to it indefinitely, while an array will eventually get filled or have to be
resized (a costly operation that isn't always possible).

Elements are also easily removed from a linked list whereas removing elements from an array leaves empty spaces that are
a waste of computer memory.

What is a Queue?
Answer: A queue is used to involve anything where you want things to happen in the order that they were called. It is a
FIFO (first in first out) abstract data type.

What is a Stack (not Java memory - refers to data structure)?
Answer: Stack is a Last In First Out (LIFO) structure. As an abstract entity, a stack is defined by the operations of
adding items to the stack, push(), and the operation of removing items from the stack, pop().

What is FIFO and LIFO?
Answer:
FIFO: - First in first out.
LIFO: - Last in first out.

Explain Big O Notation?
Answer: Big O Notation is the language we use for talking about how long an algorithm takes to run. It is how we compare
the efficiency of different approaches to a problem.

What is the best case to search an element from an array?
Answer:

What is the worst case to search an element from an array?
Answer:

Describe what a tree data structure is?
Answer: Tree data is a way to store data in a hierarchical structure.
Components of a tree:
Root: The root of a tree is a node that has no incoming link (i.e. no parent node). Think of this as a starting point of
your tree.

Children: The child of a tree is a node with one incoming link from a node above it (i.e. a parent node).
If two children nodes share the same parent, they are called siblings.

Parent: The parent node has an outgoing link connecting it to one or more child nodes.

Leaf: A leaf has a parent node but has no outgoing link to a child node. Think of this as an endpoint of your tree.

Subtree: A subtree is a smaller tree held within a larger tree. The root of that tree can be any node from the bigger
tree.

Depth: The depth of a node is the number of edges between that node and the root. Think of this as how many steps there
 are between your node and the tree’s starting point.

Height: The height of a node is the number of edges in the longest path from a node to a leaf node. Think of this as how
 many steps there are between your node and the tree’s endpoint. The height of a tree is the height of its root node.

Degree: The degree of a node refers to the number of sub-trees.

Describe what a graph data structure is?
Answer: They are used to represent elements that share connections. The elements in the graph are called Nodes and the
connections between them are called Edges.

What is the difference between the HashTable and HashMap?
Answer:

What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model
Answer:

How do HashMaps work in Java? How do they store values, and when are they useful?
Answer:

What is ArrayIndexOutOfBoundsException in java? When does it occur?
Answer:

What are the different ways of copying an array into another array?
Answer:

What is DFS and BFS?
Answer:

What is Recursion?
Answer:

What are linear and non-linear data Structures?
Answer:


Outline different sorting algorithms and their time complexities:


Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
  a) In terms of Accessing elements:
  b) In terms of Inserting elements:
  c) In terms of Searching elements:
  d) In terms of Removing elements: